/**
 * Contract addresses and ABIs
 */

export const CONTRACT_ADDRESSES: Record<string, string> = {
  alfajores: "", // Will be populated after deployment
  celo: "", // For mainnet deployment
  localhost: "", // For local testing
};

// Minimal ABI for CeloWorkEscrow contract
// Full ABI will be generated by Hardhat and can be imported
export const ESCROW_ABI = [
  "function createEscrow(address _freelancer, string[] memory _milestoneDescriptions, uint256[] memory _milestoneAmounts) external payable returns (uint256)",
  "function submitMilestone(uint256 _escrowId, uint256 _milestoneIndex) external",
  "function approveMilestone(uint256 _escrowId, uint256 _milestoneIndex) external",
  "function rejectMilestone(uint256 _escrowId, uint256 _milestoneIndex) external",
  "function raiseDispute(uint256 _escrowId) external",
  "function cancelEscrow(uint256 _escrowId) external",
  "function getEscrow(uint256 _escrowId) external view returns (uint256 id, address client, address freelancer, uint256 totalAmount, uint256 releasedAmount, uint8 status, uint256 createdAt, uint256 completedAt)",
  "function getMilestone(uint256 _escrowId, uint256 _milestoneIndex) external view returns (string memory description, uint256 amount, uint8 status, uint256 submittedAt)",
  "function getMilestoneCount(uint256 _escrowId) external view returns (uint256)",
  "function getClientEscrows(address _client) external view returns (uint256[] memory)",
  "function getFreelancerEscrows(address _freelancer) external view returns (uint256[] memory)",
  "event EscrowCreated(uint256 indexed escrowId, address indexed client, address indexed freelancer, uint256 totalAmount)",
  "event EscrowFunded(uint256 indexed escrowId, uint256 amount)",
  "event MilestoneSubmitted(uint256 indexed escrowId, uint256 milestoneIndex)",
  "event MilestoneApproved(uint256 indexed escrowId, uint256 milestoneIndex, uint256 amount)",
  "event MilestoneRejected(uint256 indexed escrowId, uint256 milestoneIndex)",
  "event EscrowCompleted(uint256 indexed escrowId)",
  "event EscrowCancelled(uint256 indexed escrowId)",
  "event DisputeRaised(uint256 indexed escrowId)",
];

export function getContractAddress(network: string): string {
  const address = CONTRACT_ADDRESSES[network];
  if (!address) {
    throw new Error(`Contract not deployed on network: ${network}`);
  }
  return address;
}
